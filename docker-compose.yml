version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tucson-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tucson
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tucson-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tucson-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/tucson
      CLERK_PUBLISHABLE_KEY: ${CLERK_PUBLISHABLE_KEY}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      CLERK_WEBHOOK_SECRET: ${CLERK_WEBHOOK_SECRET}
      FRONTEND_URL: http://localhost:5173
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - tucson-network
    command: npm run dev

  # Frontend Web App
  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: tucson-frontend
    depends_on:
      - backend
    environment:
      VITE_CLERK_PUBLISHABLE_KEY: ${CLERK_PUBLISHABLE_KEY}
      VITE_API_URL: http://localhost:5000/api/v1
    ports:
      - "5173:5173"
    volumes:
      - ./web:/app
      - /app/node_modules
    networks:
      - tucson-network
    command: npm run dev

volumes:
  postgres_data:

networks:
  tucson-network:
    driver: bridge